basePath: /
definitions:
  models.User:
    properties:
      created_at:
        type: string
      deleted_at:
        type: string
      email:
        type: string
      id:
        type: string
      name:
        type: string
      password:
        type: string
      updated_at:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    name: Ben Davis
  description: An example template of a Golang backend API using Fiber and MongoDB
  license:
    name: MIT
  title: The Better Backend Template
  version: "0.1"
paths:
  /health:
    get:
      consumes:
      - '*/*'
      description: get the status of server.
      produces:
      - text/plain
      responses:
        "200":
          description: OK
      summary: Show the status of server.
      tags:
      - health
  /users:
    get:
      consumes:
      - '*/*'
      description: fetch all users
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.User'
            type: array
      summary: Get All Users
      tags:
      - users
    post:
      consumes:
      - '*/*'
      description: create an user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
      summary: Create User
      tags:
      - users
  /users/:id:
    delete:
      consumes:
      - '*/*'
      description: delete an user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
      summary: Delete User
      tags:
      - users
    get:
      consumes:
      - '*/*'
      description: get an user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
      summary: Get User By ID
      tags:
      - users
    put:
      consumes:
      - '*/*'
      description: update an user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
      summary: Update User
      tags:
      - users
swagger: "2.0"
